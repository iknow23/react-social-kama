{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","descriptionBlock","mainPhoto","contact","postsBlock","posts","item","ProfileStatus","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","_ref","profile","handleSubmit","error","onSubmit","className","style","formSammuryError","createField","Input","type","Textarea","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatus","Post","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","p","MyPosts_Post_Post","id","AddNewPostFormRedux","values","addPost","newPostText","Field","name","component","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","__webpack_exports__","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/2.72e0400e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ywGXp\",\"mainPhoto\":\"ProfileInfo_mainPhoto__UxUu5\",\"contact\":\"ProfileInfo_contact__27yJK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1NgX4\",\"posts\":\"MyPosts_posts__iXfuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__SYR55\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({\r\n    //             status: this.props.status\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <b>Status: </b><span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport style from '../../common/FormControls/FormControls.module.css';\r\n\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            {error &&\r\n                <div className={style.formSammuryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <strong>Full name:</strong> {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <strong>Looking for a job:</strong> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                <strong>My professional skills</strong> {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>About me:</strong> {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>Contacts:</strong> {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={s.contact}>\r\n                            <strong>{key}: </strong> {createField(key, 'contacts.' + key, [], Input)}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: 'editProfile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const goToEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const onSubmit = formData => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={goToEditMode} />}\r\n\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n            <div>\r\n                <strong>Full name:</strong> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <strong>Looking for a job:</strong> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <strong>My professional skills</strong> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <strong>About me:</strong> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <strong>Contacts:</strong> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><em>{contactTitle}</em>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\" validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n  form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: newPostText => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}