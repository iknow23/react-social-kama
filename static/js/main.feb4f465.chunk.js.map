{"version":3,"sources":["api/api.js","components/Users/Users.module.css","assets/images/user.png","assets/images/loader.svg","components/Navbar/Navbar.module.css","components/common/FormControls/FormControls.js","serviceWorker.js","redux/sidebar-reducer.js","utils/validators/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/Users/UsersContainer.js","redux/users-selctors.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","App.js","index.js","components/common/preloader/Preloader.js","components/common/FormControls/FormControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","authAPI","profileAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","baseURL","withCredentials","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getAuth","login","email","password","rememberMe","logout","getProfile","getStatus","updateStatus","status","put","module","exports","userPhoto","p","nav","item","activeLink","FormControl","_ref","input","meta","props","child","Object","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","s","formControl","children","Textarea","restProps","assign","Input","createField","placeholder","name","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","this","_x2","_x3","_x4","_x5","apply","usersReducer","action","followed","totalCount","toConsumableArray","filter","id","isAuth","setAuthUserData","payload","_callee","_response$data","_login","_context","_x","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","Navbar","react_default","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","key","e","User","user","src","photos","small","usersPhoto","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","UsersContainer","_this","setCurrentPage","requestUsers","Fragment","Preloader","components_Users_Users","React","Component","mapDispatchToProps","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","connect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Header","header","loginBlock","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","formSammuryError","message","messages","stopSubmit","_error","Redirect","formData","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","react","fallback","Route","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","SocialApp","BrowserRouter","basename","process","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLengthCreator","value","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setUserProfile","setStatus","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","newPost","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","el","postId","dialogs","sendMessageCreator","newMessageBody","body","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_User_Desktop_react_social_kama_react_way_of_samuray_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,KAEMO,EAAWC,SAAa,CAC1BC,QAAO,gDACPC,iBAAiB,EACjBC,QAAS,CACLC,UAAW,0CAINT,EAAW,CACpBU,SADoB,WACoB,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,EAAGG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACjC,OAAOR,EAASY,IAAT,cAAAC,OAA2BN,EAA3B,WAAAM,OAAgDF,IAClDG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEnCC,OALoB,SAKbC,GACH,OAAOlB,EAASmB,KAAT,UAAAN,OAAwBK,IAC1BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEnCI,SAToB,SASXF,GACL,OAAOlB,EAASqB,OAAT,UAAAR,OAA0BK,IAC5BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAI1BnB,EAAU,CACnByB,QADmB,WAEf,OAAOtB,EAASY,IAAT,WACFE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEnCO,MALmB,SAKbC,EAAOC,GAA8B,IAApBC,EAAoBlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvC,OAAOR,EAASmB,KAAT,aAA4B,CAACK,QAAOC,WAAUC,gBAEzDC,OARmB,WASf,OAAO3B,EAASqB,OAAT,gBAIFvB,EAAa,CACtB8B,WADsB,SACXV,GACP,OAAOlB,EAASY,IAAT,WAAAC,OAAwBK,IAC1BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEnCa,UALsB,SAKZX,GACN,OAAOlB,EAASY,IAAT,kBAAAC,OAA+BK,KAE1CY,aARsB,SAQTC,GACT,OAAO/B,EAASgC,IAAT,iBAA+B,CAAED,OAAQA,2BC9CxDE,EAAAC,QAAA,CAAkBC,UAAA,+CCDlBF,EAAAC,QAAiBzC,EAAA2C,EAAuB,sDCAxCH,EAAAC,QAAiBzC,EAAA2C,EAAuB,uDCCxCH,EAAAC,QAAA,CAAkBG,IAAA,oBAAAC,KAAA,qBAAAC,WAAA,qSCGZC,EAAc,SAAAC,GAAoCA,EAAlCC,MAAkC,IAA3BC,EAA2BF,EAA3BE,KAAgBC,GAAWH,EAArBI,MAAqBC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,2BAC9CO,EAAWL,EAAKM,SAAWN,EAAKO,MACtC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,YAAc,KAAOR,EAAWO,IAAEL,MAAQ,KACxDC,EAAAC,EAAAC,cAAA,WACKT,EAAMa,UAEVT,GAAYG,EAAAC,EAAAC,cAAA,YAAOV,EAAKO,SAKxBQ,EAAW,SAAAd,GAAS,IACtBF,EAAoCE,EAApCF,MAAuBiB,GAAaf,EAA7BD,KAA6BC,EAAvBC,MADSC,OAAAC,EAAA,EAAAD,CACcF,EADd,2BAE7B,OAAOO,EAAAC,EAAAC,cAACb,EAAgBI,EAAjB,IAAyBO,EAAAC,EAAAC,cAAA,WAAAP,OAAAc,OAAA,GAAclB,EAAWiB,MAGhDE,EAAQ,SAAAjB,GAAS,IACnBF,EAAoCE,EAApCF,MAAuBiB,GAAaf,EAA7BD,KAA6BC,EAAvBC,MADMC,OAAAC,EAAA,EAAAD,CACiBF,EADjB,2BAE1B,OAAOO,EAAAC,EAAAC,cAACb,EAAgBI,EAAjB,IAAyBO,EAAAC,EAAAC,cAAA,QAAAP,OAAAc,OAAA,GAAWlB,EAAWiB,MAG7CG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAqC,IAA1BtB,EAA0BpC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAI2D,EAAc3D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrF,OAAO2C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACe,EAAA,EAADtB,OAAAc,OAAA,CAAOG,YAAaA,EAAaC,KAAMA,EAAME,UAAWA,EAAWG,SAAUJ,GAAgBrB,IAAUuB,6CCfnGG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wKClBFC,EAAe,GAMJC,EAJQ,WAAkC,IAAjCC,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EAAyBnE,UAAAC,OAAA,GAAAD,UAAA,GACrD,OAAOqE,kDCHEC,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,IAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZlC,OAAAuC,EAAA,EAAAvC,CAAA,GACAsC,EACAF,GAGJE,KCGXT,EAAe,CACfW,MAAO,GACP3E,SAAU,GACV4E,gBAAiB,EACjBhF,YAAa,EACbiF,YAAY,EACZC,oBAAqB,IA+CZC,EAAgB,SAAAxE,GAAM,MAAK,CAAEyE,KA7D3B,SA6DyCzE,WAC3C0E,EAAkB,SAAA1E,GAAM,MAAK,CAAEyE,KA7D3B,WA6D2CzE,WAI/C2E,EAAmB,SAAAL,GAAU,MAAK,CAAEG,KA7DtB,qBA6DgDH,eAC9DM,EAA0B,SAACN,EAAYtE,GAAb,MAAyB,CAAEyE,KA7D7B,+BA6DiEH,aAAYtE,WAa5G6E,EAAkB,eAAAC,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAG,SAAAC,EAAOC,EAAUnF,EAAQoF,EAAWC,GAApC,OAAAL,EAAA9C,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBN,EAASP,GAAwB,EAAM5E,IADhBuF,EAAAE,KAAA,EAEJL,EAAUpF,GAFN,OAGC,IAHDuF,EAAAG,KAGdC,YACLR,EAASE,EAAcrF,IAE3BmF,EAASP,GAAwB,EAAO5E,IANjB,wBAAAuF,EAAAK,SAAAV,EAAAW,SAAH,gBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAnB,EAAAoB,MAAAL,KAAAvG,YAAA,GAuBT6G,EAtFM,WAAkC,IAAjCxC,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EAAc2C,EAAW9G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAO4G,EAAO3B,MACV,IAnBO,SAoBH,OAAO7C,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIS,MAAOR,EAAoBD,EAAMS,MAAOgC,EAAOpG,OAAQ,KAAM,CAACqG,UAAU,MAEhF,IAvBS,WAwBL,OAAOzE,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIS,MAAOR,EAAoBD,EAAMS,MAAOgC,EAAOpG,OAAQ,KAAM,CAACqG,UAAU,MAEhF,IA3BU,YA4BN,OAAOzE,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIS,MAAOgC,EAAOhC,QAEtB,IA/BiB,mBAgCb,OAAOxC,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEItE,YAAa+G,EAAO/G,cAE5B,IAnCsB,wBAoClB,OAAOuC,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIU,gBAAiB+B,EAAOE,aAEhC,IAvCmB,qBAwCf,OAAO1E,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIW,WAAY8B,EAAO9B,aAE3B,IA3C6B,+BA4CzB,OAAO1C,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIY,oBAAqB6B,EAAO9B,WAAP1C,OAAA2E,EAAA,EAAA3E,CACX+B,EAAMY,qBADK5E,OAAA,CACgByG,EAAOpG,SACtC2D,EAAMY,oBAAoBiC,OAAO,SAAAC,GAAE,OAAIA,IAAOL,EAAOpG,WAEnE,QACI,OAAO2D,YCvDfF,EAAe,CACfzD,OAAQ,KACRM,MAAO,KACPD,MAAO,KACPqG,QAAQ,GAgBCC,EAAkB,SAAC3G,EAAQM,EAAOD,EAAOqG,GAAvB,MAAmC,CAACjC,KAtB7C,gCAsBkEmC,QAAS,CAAC5G,SAAQM,QAAOD,QAAOqG,YAE3GtG,EAAU,WACnB,sBAAAmB,EAAAK,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAA4B,EAAM1B,GAAN,IAAAtF,EAAAiH,EAAAL,EAAAnG,EAAAyG,EAAA,OAAA/B,EAAA9C,EAAAoD,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACoB9G,IAAQyB,UAD5B,OAEyB,KADtBP,EADHmH,EAAAtB,MAEUC,aAAkBmB,EACAjH,EAASC,KAA7B2G,EADoBK,EACpBL,GAAInG,EADgBwG,EAChBxG,MAAOD,EADSyG,EACTzG,MAClB8E,EAASwB,EAAgBF,EAAInG,EAAOD,GAAO,KAJ5C,wBAAA2G,EAAApB,SAAAiB,EAAAhB,SAAP,gBAAAoB,GAAA,OAAA1F,EAAA2E,MAAAL,KAAAvG,YAAA,IA8BW4H,EA9CK,WAAkC,IAAjCvD,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EAAc2C,EAAW9G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAO4G,EAAO3B,MACV,IAXc,gCAYV,OAAO7C,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EACAyC,EAAOQ,SAGlB,QACI,OAAOjD,sBChBfF,EAAe,CACf0D,aAAa,GA4BFC,EAzBI,WAAkC,IAAjCzD,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EACxB,QADiDnE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACnCiF,MACV,IARoB,sBAShB,OAAO7C,OAAAuC,EAAA,EAAAvC,CAAA,GACA+B,EADP,CAEIwD,aAAa,IAGrB,QACI,OAAOxD,ICPf0D,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAaC,IACbC,QAASjE,EACTkE,UAAWzB,EACX0B,KAAMX,EACNY,KAAMC,IACNC,IAAKZ,IAGHa,EAAmB5E,OAAO6E,sCAAwCC,IAKzDC,EAJDC,YAAYhB,EAAUY,EAChCK,YAAgBC,2DCMLC,EAzBA,WACX,OACIC,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAElB,KACdsH,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAEjB,MACdqH,EAAAvG,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBvG,IAAEhB,YAA1C,YAEJoH,EAAAvG,EAAAC,cAAA,OAAKC,UAAS,GAAAzC,OAAK0C,IAAEjB,KAAP,KAAAzB,OAAe0C,IAAEwG,SAC3BJ,EAAAvG,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBvG,IAAEhB,YAA1C,aAEJoH,EAAAvG,EAAAC,cAAA,OAAKC,UAAS,GAAAzC,OAAK0C,IAAEjB,KAAP,KAAAzB,OAAe0C,IAAEwG,SAC3BJ,EAAAvG,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAiBvG,IAAEhB,YAAxC,UAEJoH,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAEjB,MACdqH,EAAAvG,EAAAC,cAAA,kBAEJsG,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAEjB,MACdqH,EAAAvG,EAAAC,cAAA,mBAEJsG,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAEjB,MACdqH,EAAAvG,EAAAC,cAAA,4GCgBD2G,GAnCC,SAAAvH,GAKZ,IAL2F,IAA7EwH,EAA6ExH,EAA7EwH,gBAAiBtJ,EAA4D8B,EAA5D9B,SAAUJ,EAAkDkC,EAAlDlC,YAAa2J,EAAqCzH,EAArCyH,cAAqCC,EAAA1H,EAAtB2H,mBAAsB,IAAAD,EAAR,GAAQA,EAEvFE,EAAaC,KAAKC,KAAKN,EAAkBtJ,GAEzC6J,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATiDQ,EAUnDC,mBAAS,GAV0CC,EAAAhI,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,GAUtFI,EAVsFF,EAAA,GAUvEG,EAVuEH,EAAA,GAWvFI,GAAyBF,EAAgB,GAAKZ,EAAc,EAC5De,EAAyBH,EAAgBZ,EAE7C,OACIT,EAAAvG,EAAAC,cAAA,OAAKC,UAAW8H,KAAOC,WACjBL,EAAgB,GAAKrB,EAAAvG,EAAAC,cAAA,UAAQiI,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,QACtBR,EACI9C,OAAO,SAAAtF,GAAC,OAAIA,GAAK8I,GAAyB9I,GAAG+I,IAC7ChG,IAAI,SAAA/C,GACD,OACIuH,EAAAvG,EAAAC,cAAA,QACIC,UAAWiI,KAAGzI,OAAA0I,EAAA,EAAA1I,CAAA,GAAEsI,KAAOK,aAAelL,IAAgB6B,GAAIgJ,KAAOM,YACjEC,IAAKvJ,EACLkJ,QAAS,SAAAM,GAAC,OAAI1B,EAAc9H,KAE3BA,KAIfuI,EAAeK,GAAiBrB,EAAAvG,EAAAC,cAAA,UAAQiI,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,oDCC/Ba,GA9BF,SAAApJ,GAAmD,IAAjDqJ,EAAiDrJ,EAAjDqJ,KAAMrG,EAA2ChD,EAA3CgD,oBAAqBrE,EAAsBqB,EAAtBrB,SAAUH,EAAYwB,EAAZxB,OAChD,OACI0I,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAE,YAAAhJ,OAAciL,EAAKnE,KAC1BgC,EAAAvG,EAAAC,cAAA,OAAK0I,IAA2B,OAAtBD,EAAKE,OAAOC,MAAiBH,EAAKE,OAAOC,MAAQC,KAAY5I,UAAW8H,KAAOjJ,cAGjGwH,EAAAvG,EAAAC,cAAA,WACKyI,EAAKvE,SACAoC,EAAAvG,EAAAC,cAAA,UAAQ8I,SAAU1G,EAAoB2G,KAAK,SAAAzE,GAAE,OAAIA,IAAOmE,EAAKnE,KAAK2D,QAAS,WAAQlK,EAAS0K,EAAKnE,MAAjG,YACAgC,EAAAvG,EAAAC,cAAA,UAAQ8I,SAAU1G,EAAoB2G,KAAK,SAAAzE,GAAE,OAAIA,IAAOmE,EAAKnE,KAAK2D,QAAS,WAAQrK,EAAO6K,EAAKnE,MAA/F,YAIdgC,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,WAAMyI,EAAK9H,MACX2F,EAAAvG,EAAAC,cAAA,WAAMyI,EAAK/J,SAEf4H,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,WAAM,yBACNsG,EAAAvG,EAAAC,cAAA,WAAM,0BCbXgJ,GAXD,SAAA5J,GAAsH,IAApH6C,EAAoH7C,EAApH6C,MAAO/E,EAA6GkC,EAA7GlC,YAAa2J,EAAgGzH,EAAhGyH,cAAeD,EAAiFxH,EAAjFwH,gBAAiBtJ,EAAgE8B,EAAhE9B,SAAU8E,EAAsDhD,EAAtDgD,oBAAqBrE,EAAiCqB,EAAjCrB,SAAUH,EAAuBwB,EAAvBxB,OAAuB6B,OAAAwJ,EAAA,EAAAxJ,CAAAL,EAAA,gHAChI,OACIkH,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAACkJ,GAAD,CAAWhM,YAAaA,EAAa2J,cAAeA,EAAeD,gBAAiBA,EAAiBtJ,SAAUA,IAC/GgJ,EAAAvG,EAAAC,cAAA,WACKiC,EAAMH,IAAI,SAAAC,GAAC,OAAIuE,EAAAvG,EAAAC,cAACmJ,GAAD,CAAMV,KAAM1G,EAAGK,oBAAqBA,EAAqBrE,SAAUA,EAAUH,OAAQA,EAAQ0K,IAAKvG,EAAEuC,mBCD9H8E,8MAKFvC,cAAgB,SAAAwB,GACZgB,EAAK9J,MAAM+J,eAAejB,GAC1BgB,EAAK9J,MAAMgK,aAAalB,EAAYgB,EAAK9J,MAAMjC,8FAL/CoG,KAAKnE,MAAMgK,aAAa7F,KAAKnE,MAAMrC,YAAawG,KAAKnE,MAAMjC,2CAS3D,OAAOgJ,EAAAvG,EAAAC,cAAAsG,EAAAvG,EAAAyJ,SAAA,KACF9F,KAAKnE,MAAM4C,WAAamE,EAAAvG,EAAAC,cAACyJ,GAAA,EAAD,MAAgB,KACzCnD,EAAAvG,EAAAC,cAAC0J,GAAD,CACI9C,gBAAiBlD,KAAKnE,MAAM2C,gBAC5B5E,SAAUoG,KAAKnE,MAAMjC,SACrBJ,YAAawG,KAAKnE,MAAMrC,YACxB2J,cAAenD,KAAKmD,cACpB9I,SAAU2F,KAAKnE,MAAMxB,SACrBH,OAAQ8F,KAAKnE,MAAM3B,OACnBqE,MAAOyB,KAAKnE,MAAM0C,MAClBG,oBAAqBsB,KAAKnE,MAAM6C,8BArBnBuH,IAAMC,WAiD7BC,GAAqB,CACvBjM,ORkCkB,SAAAC,GAClB,sBAAAiM,EAAArK,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAAiH,EAAM/G,GAAN,IAAAC,EAAA,OAAAJ,EAAA9C,EAAAoD,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,OACGL,EAAY1G,IAASqB,OAAOqM,KAAK1N,KACvCmG,EAAmBM,EAAUnF,EAAQoF,EAAWZ,GAF7C,wBAAA2H,EAAAvG,SAAAsG,EAAArG,SAAP,gBAAAwG,GAAA,OAAAJ,EAAA/F,MAAAL,KAAAvG,YAAA,IQlCAY,SRwCoB,SAAAF,GACpB,sBAAAsM,EAAA1K,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAAsH,EAAMpH,GAAN,IAAAC,EAAA,OAAAJ,EAAA9C,EAAAoD,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,OACGL,EAAY1G,IAASwB,SAASkM,KAAK1N,KACzCmG,EAAmBM,EAAUnF,EAAQoF,EAAWV,GAF7C,wBAAA8H,EAAA5G,SAAA2G,EAAA1G,SAAP,gBAAA4G,GAAA,OAAAH,EAAApG,MAAAL,KAAAvG,YAAA,IQxCAmM,eRO0B,SAAApM,GAAW,MAAK,CAAEoF,KA7DvB,mBA6D+CpF,gBQNpEuF,0BACA8G,aRUwB,SAACgB,EAAMjN,GAC/B,sBAAA8B,EAAAK,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAA4B,EAAM1B,GAAN,IAAArF,EAAA,OAAAkF,EAAA9C,EAAAoD,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACHN,EAASR,GAAiB,IADvBqC,EAAAvB,KAAA,EAEgB/G,IAASU,SAASsN,EAAMjN,GAFxC,OAEGK,EAFHkH,EAAAtB,KAIHP,EAX0B,CAAEV,KA7DlB,YA6DmCL,MAW3BtE,EAAK+D,QACvBsB,EAVyC,CAAEV,KA7DrB,wBA6DkD6B,WAU5CxG,EAAKwG,aACjCnB,EAASR,GAAiB,IANvB,wBAAAqC,EAAApB,SAAAiB,EAAAhB,SAAP,gBAAAoB,GAAA,OAAA1F,EAAA2E,MAAAL,KAAAvG,YAAA,KQRW6I,eACXwE,YApBoB,SAAAhJ,GACpB,MAAO,CACHS,MChDgB,SAAAT,GACpB,OAAOA,EAAMiE,UAAUxD,MD+CZhF,CAASuE,GAChBlE,SC7CmB,SAAAkE,GACvB,OAAOA,EAAMiE,UAAUnI,SD4CTmN,CAAYjJ,GACtBU,gBC1C0B,SAAAV,GAC9B,OAAOA,EAAMiE,UAAUvD,gBDyCFwI,CAAmBlJ,GACpCtE,YCvCsB,SAAAsE,GAC1B,OAAOA,EAAMiE,UAAUvI,YDsCNyN,CAAenJ,GAC5BW,WCpCqB,SAAAX,GACzB,OAAOA,EAAMiE,UAAUtD,WDmCPyI,CAAcpJ,GAC1BY,oBCjC8B,SAAAZ,GAClC,OAAOA,EAAMiE,UAAUrD,oBDgCEyI,CAAuBrJ,KAavBqI,IADd7D,CAEboD,wBEpDa0B,GAXA,SAAAvL,GACX,OAAO+G,EAAAvG,EAAAC,cAAA,UAAQC,UAAWC,KAAE6K,QACxBzE,EAAAvG,EAAAC,cAAA,OAAK0I,IAAI,6DACTpC,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,KAAE8K,YACbzL,EAAMgF,OACD+B,EAAAvG,EAAAC,cAAA,WAAMT,EAAMrB,MAAZ,MAAqBoI,EAAAvG,EAAAC,cAAA,UAAQiI,QAAS1I,EAAMjB,QAAvB,WACrBgI,EAAAvG,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAI,UAAb,YCLZyE,oLAEE,OAAO3E,EAAAvG,EAAAC,cAACkL,GAAWxH,KAAKnE,cAFFoK,IAAMC,WAW9BC,GAAqB,CACvBvL,OVgCkB,WAClB,sBAAAwL,EAAArK,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAAiH,EAAM/G,GAAN,OAAAH,EAAA9C,EAAAoD,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,EACoB9G,IAAQ8B,SAD5B,OAE8B,IAF9B0L,EAAAzG,KAEU5F,KAAK6F,YACdR,EAASwB,EAAgB,KAAM,KAAM,MAAM,IAH5C,wBAAAwF,EAAAvG,SAAAsG,EAAArG,SAAP,gBAAAE,GAAA,OAAAkG,EAAA/F,MAAAL,KAAAvG,YAAA,KU9BWqN,eATS,SAAAhJ,GAAK,MAAK,CAC9B+C,OAAQ/C,EAAMkE,KAAKnB,OACnBrG,MAAOsD,EAAMkE,KAAKxH,QAOkB2L,GAAzBW,CAA6CS,8DCOtDE,GAAiBC,aAAU,CAC7BzF,KAAM,SADayF,CAlBL,SAAAhM,GAA2B,IAAzBiM,EAAyBjM,EAAzBiM,aAAcxL,EAAWT,EAAXS,MAC9B,OACIyG,EAAAvG,EAAAC,cAAA,QAAMsL,SAAUD,GACX5K,aAAY,QAAS,QAAS,CAAC8K,MAAW/K,MAC1CC,aAAY,WAAY,WAAY,CAAC8K,MAAW/K,KAAO,CAAC8B,KAAM,aAC9D7B,aAAY,KAAM,aAAc,KAAMD,KAAO,CAAC8B,KAAM,YAAa,eACjEzC,GACGyG,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,KAAEsL,kBACb3L,GAGTyG,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,2BAgCDwK,eAJS,SAAAhJ,GAAK,MAAK,CAC9B+C,OAAQ/C,EAAMkE,KAAKnB,SAGiB,CAACrG,MXhBpB,SAACC,EAAOC,EAAUC,GACnC,sBAAAsE,EAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,EAAA9C,EAAA+C,KAAO,SAAAC,EAAMC,GAAN,IAAAtF,EAAA+N,EAAA,OAAA5I,EAAA9C,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACoB9G,IAAQ0B,MAAMC,EAAOC,EAAUC,GADnD,OAE8B,KAD3BX,EADH0F,EAAAG,MAEU5F,KAAK6F,WACdR,EAAS/E,MAELwN,EAAU/N,EAASC,KAAK+N,SAAStO,OAAS,EAAIM,EAASC,KAAK+N,SAAS,GAAK,aAC9E1I,EAAS2I,YAAW,QAAS,CAACC,OAAQH,MANvC,wBAAArI,EAAAK,SAAAV,EAAAW,SAAP,gBAAAC,GAAA,OAAAhB,EAAAoB,MAAAL,KAAAvG,YAAA,KWeWqN,CAtBD,SAAAjL,GAMV,OAAIA,EAAMgF,OACC+B,EAAAvG,EAAAC,cAAC6L,GAAA,EAAD,CAAUrF,GAAI,aAIrBF,EAAAvG,EAAAC,cAAA,WACIsG,EAAAvG,EAAAC,cAAA,mBACAsG,EAAAvG,EAAAC,cAACmL,GAAD,CAAgBG,SAZP,SAAAQ,GAAY,IAClB3N,EAA+B2N,EAA/B3N,MAAOC,EAAwB0N,EAAxB1N,SAAUC,EAAcyN,EAAdzN,WACxBkB,EAAMrB,MAAMC,EAAOC,EAAUC,SCnB/B0N,GAAmBpC,IAAMqC,KAAK,kBAAM5P,EAAAmM,EAAA,GAAA9K,KAAArB,EAAA6N,KAAA,aACpCgC,GAAmBtC,IAAMqC,KAAK,kBAAM5P,EAAAmM,EAAA,GAAA9K,KAAArB,EAAA6N,KAAA,aAEpCiC,+LAEExI,KAAKnE,MAAM4M,iDAIX,OAAKzI,KAAKnE,MAAMyF,YAKZsB,EAAAvG,EAAAC,cAAA,OAAKC,UAAU,eACXqG,EAAAvG,EAAAC,cAACoM,GAAD,MACA9F,EAAAvG,EAAAC,cAACqM,EAAD,MACA/F,EAAAvG,EAAAC,cAAA,OAAKC,UAAU,uBACXqG,EAAAvG,EAAAC,cAACsM,EAAA,SAAD,CAAUC,SAAUjG,EAAAvG,EAAAC,cAACyJ,GAAA,EAAD,OAChBnD,EAAAvG,EAAAC,cAACwM,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,OAAS,kBAAMpG,EAAAvG,EAAAC,cAACiM,GAAD,SAC/C3F,EAAAvG,EAAAC,cAACwM,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAS,kBAAMpG,EAAAvG,EAAAC,cAAC+L,GAAD,UAEtCzF,EAAAvG,EAAAC,cAACwM,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAS,kBAAMpG,EAAAvG,EAAAC,cAAC2M,GAAD,SACpCrG,EAAAvG,EAAAC,cAACwM,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAS,kBAAMpG,EAAAvG,EAAAC,cAAC4M,GAAD,WAbzCtG,EAAAvG,EAAAC,cAACyJ,GAAA,EAAD,aAPDE,IAAMC,WA+BlBiD,GAAe7G,YACjB8G,IACAtC,YANoB,SAAAhJ,GAAK,MAAK,CAC9BwD,YAAaxD,EAAMqE,IAAIb,cAKE,CAACmH,cX3BD,WACzB,OAAO,SAAAnJ,GACaA,EAAS/E,KAEjBR,KAAK,WACTuF,EAP6B,CAACV,KAnBd,8BW8CP0D,CAGnBkG,IAYaa,GAVG,SAAAxN,GACd,OACI+G,EAAAvG,EAAAC,cAACgN,EAAA,EAAD,CAAeC,SAAUC,sBACrB5G,EAAAvG,EAAAC,cAACmN,EAAA,EAAD,CAAUlH,MAAOA,GACbK,EAAAvG,EAAAC,cAAC6M,GAAD,SCnDhBO,IAASV,OAAOpG,EAAAvG,EAAAC,cAACqN,GAAD,MAAeC,SAASC,eAAe,SjB0HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjQ,KAAK,SAAAkQ,GACjCA,EAAaC,gDkBnInB,IAAAC,EAAAzR,EAAA,GAAA0R,EAAA1R,EAAA2R,EAAAF,GAAAG,EAAA5R,EAAA,KAAA6R,EAAA7R,EAAA2R,EAAAC,GAOevE,IAJG,WACd,OAAOqE,EAAA/N,EAAAC,cAAA,OAAK0I,IAAKwF,2BCHrBtP,EAAAC,QAAA,CAAkBsB,YAAA,kCAAAN,MAAA,4BAAA2L,iBAAA,4DCAlB5M,EAAAC,QAAA,CAAkBmJ,UAAA,6BAAAK,WAAA,8BAAAD,aAAA,kECDlBhM,EAAAC,EAAAC,EAAA,sBAAAiP,IAAAnP,EAAAC,EAAAC,EAAA,sBAAA6R,IAAO,IAAM5C,EAAW,SAAA6C,GACpB,IAAIA,EAEJ,MAAO,qBAGED,EAAmB,SAAAE,GAAS,OAAI,SAAAD,GACzC,GAAIA,GAASA,EAAMhR,OAASiR,EAAW,uBAAA7Q,OAAwB6Q,yBCNnEzP,EAAAC,QAAA,CAAkBkM,OAAA,uBAAAC,WAAA,gRCMd1J,EAAe,CACfgN,MAAO,CACH,CAAChK,GAAI,EAAGmH,QAAS,mBAAoB8C,WAAY,IACjD,CAACjK,GAAI,EAAGmH,QAAS,qBAAuB8C,WAAY,IACpD,CAACjK,GAAI,EAAGmH,QAAS,SAAU8C,WAAY,IACvC,CAACjK,GAAI,EAAGmH,QAAS,OAAQ8C,WAAY,KAEzCC,QAAS,KACT9P,OAAQ,IAqCC+P,EAAuB,SAAAC,GAAW,MAAK,CAACpM,KAlDpC,WAkDoDoM,gBACxDC,EAAiB,SAAAH,GAAO,MAAK,CAAClM,KAlDlB,mBAkD0CkM,YACtDI,EAAY,SAAAlQ,GAAM,MAAK,CAAC4D,KAlDlB,aAkDoC5D,WAG1CH,EAAa,SAAAV,GACtB,sBAAAuB,EAAAK,OAAAoP,EAAA,EAAApP,CAAAqP,EAAA/O,EAAA+C,KAAO,SAAA4B,EAAM1B,GAAN,IAAAtF,EAAA,OAAAoR,EAAA/O,EAAAoD,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACoB7G,IAAW8B,WAAWV,GAD1C,OACGH,EADHmH,EAAAtB,KAEHP,EAAS2L,EAAejR,EAASC,OAF9B,wBAAAkH,EAAApB,SAAAiB,EAAAhB,SAAP,gBAAAoB,GAAA,OAAA1F,EAAA2E,MAAAL,KAAAvG,YAAA,IAMSqB,EAAY,SAAAX,GAAM,sBAAA8E,EAAAlD,OAAAoP,EAAA,EAAApP,CAAAqP,EAAA/O,EAAA+C,KAAI,SAAAC,EAAOC,GAAP,IAAAtF,EAAA,OAAAoR,EAAA/O,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR7G,IAAW+B,UAAUX,GADb,OACzBH,EADyB0F,EAAAG,KAE/BP,EAAS4L,EAAUlR,EAASC,OAFG,wBAAAyF,EAAAK,SAAAV,EAAAW,SAAJ,gBAAAC,GAAA,OAAAhB,EAAAoB,MAAAL,KAAAvG,YAAA,IAKlBsB,EAAe,SAAAC,GAAM,sBAAAoL,EAAArK,OAAAoP,EAAA,EAAApP,CAAAqP,EAAA/O,EAAA+C,KAAI,SAAAiH,EAAO/G,GAAP,OAAA8L,EAAA/O,EAAAoD,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA1G,KAAA,EACX7G,IAAWgC,aAAaC,GADb,OAED,IAFCsL,EAAAzG,KAErB5F,KAAK6F,YACdR,EAAS4L,EAAUlQ,IAHW,wBAAAsL,EAAAvG,SAAAsG,EAAArG,SAAJ,gBAAAE,GAAA,OAAAkG,EAAA/F,MAAAL,KAAAvG,YAAA,IAOnBkI,IA1DQ,WAAkC,IAAjC7D,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EAAc2C,EAAW9G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAO4G,EAAO3B,MACV,IAlBS,WAmBL,IAAIyM,EAAU,CACVzK,GAAI,EACJmH,QAASxH,EAAOyK,YAChBH,WAAY,GAEhB,OAAO9O,OAAAuP,EAAA,EAAAvP,CAAA,GACA+B,EADP,CAEI8M,MAAM7O,OAAAwP,EAAA,EAAAxP,CAAK+B,EAAM8M,OAAZ9Q,OAAA,CAAmBuR,IACxBL,YAAa,KAGrB,IA7BiB,mBA8Bb,OAAOjP,OAAAuP,EAAA,EAAAvP,CAAA,GACA+B,EADP,CAEIgN,QAASvK,EAAOuK,UAExB,IAjCW,aAkCP,OAAO/O,OAAAuP,EAAA,EAAAvP,CAAA,GACA+B,EADP,CAEI9C,OAAQuF,EAAOvF,SAEvB,IArCY,cAsCR,OAAOe,OAAAuP,EAAA,EAAAvP,CAAA,GACA+B,EADP,CAEI8M,MAAO9M,EAAM8M,MAAMjK,OAAO,SAAA6K,GAAE,OAAIA,EAAG5K,KAAOL,EAAOkL,WAEzD,QACI,OAAO3N,wFC9CfF,EAAe,CACf8N,QAAS,CACL,CAAC9K,GAAI,EAAG3D,KAAM,UACd,CAAC2D,GAAI,EAAG3D,KAAM,UACd,CAAC2D,GAAI,EAAG3D,KAAM,SACd,CAAC2D,GAAI,EAAG3D,KAAM,SACd,CAAC2D,GAAI,EAAG3D,KAAM,UACd,CAAC2D,GAAI,EAAG3D,KAAM,WAElB+K,SAAU,CACN,CAACpH,GAAI,EAAGmH,QAAS,MACjB,CAACnH,GAAI,EAAGmH,QAAS,6BACjB,CAACnH,GAAI,EAAGmH,QAAS,MACjB,CAACnH,GAAI,EAAGmH,QAAS,MACjB,CAACnH,GAAI,EAAGmH,QAAS,QAiBZ4D,EAAqB,SAAAC,GAAc,MAAK,CAAChN,KAjCjC,eAiCqDgN,mBAE3D/J,IAfQ,WAAkC,IAAjC/D,EAAiCrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmE,EAAc2C,EAAW9G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQ4G,EAAO3B,MACX,IAtBa,eAuBT,IAAIiN,EAAOtL,EAAOqL,eAClB,OAAO7P,OAAA+P,EAAA,EAAA/P,CAAA,GACA+B,EADP,CAEIkK,SAASjM,OAAAgQ,EAAA,EAAAhQ,CAAK+B,EAAMkK,UAAZlO,OAAA,CAAsB,CAAC8G,GAAI,EAAGmH,QAAS8D,OAEvD,QACI,OAAO/N","file":"static/js/main.feb4f465.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '7244807a-ddd9-49f2-aa3c-73ea155a3b51'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__hRKOG\"};","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.ca5fed74.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__7Yg2L\",\"item\":\"Navbar_item__2dwnC\",\"activeLink\":\"Navbar_activeLink__g1J7L\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = props => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = props => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return <div><Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} />{text}</div>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {\r\n                ...u,\r\n                ...newObjProps\r\n            }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = userId => ({ type: FOLLOW, userId});\r\nexport const unfollowSuccess = userId => ({ type: UNFOLLOW, userId});\r\nexport const setUsers = users => ({ type: SET_USERS, users});\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = totalCount => ({ type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async dispatch => {\r\n        dispatch(toggleIsFetching(true));\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = userId => {\r\n    return async dispatch => {\r\n        const apiMethod = usersAPI.follow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = userId => {\r\n    return async dispatch => {\r\n        const apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'my-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuth = () => {\r\n    return async dispatch => {\r\n        const response = await authAPI.getAuth();\r\n        if (response.resultCode === 0) {\r\n            const {id, email, login} = response.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async dispatch => {\r\n        const response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async dispatch => {\r\n        const response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { authAPI } from '../api/api';\r\nimport { getAuth } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => {\r\n    return dispatch => {\r\n        const promise = dispatch(getAuth());\r\n\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers, createStore, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            { portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n                    return (\r\n                        <span\r\n                            className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                            key={p}\r\n                            onClick={e => onPageChanged(p)}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    ) \r\n            })}\r\n            { portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport usersPhoto from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img src={user.photos.small !== null ? user.photos.small : usersPhoto} className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { follow(user.id) }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = ({users, currentPage, onPageChanged, totalItemsCount, pageSize, followingInProgress, unfollow, follow,  ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalItemsCount} pageSize={pageSize} />\r\n            <div>\r\n                {users.map(u => <User user={u} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow} key={u.id} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selctors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = pageNumber => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersContainer);\r\n","export const getUsers = state => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = state => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = state => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = state => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = state => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = state => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './../common/FormControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'Remember me')}\r\n            {error &&\r\n                <div className={s.formSammuryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => {\r\n        const {email, password, rememberMe} = formData;\r\n        props.login(email, password, rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, { Suspense } from 'react';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, withRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/preloader/Preloader';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                    <Suspense fallback={<Preloader />}>\n                        <Route path='/profile/:userId?' render={ () => <ProfileContainer /> }/>\n                        <Route path='/dialogs' render={ () => <DialogsContainer /> }/>\n                    </Suspense>\n                        <Route path='/users' render={ () => <UsersContainer /> }/>\n                        <Route path='/login' render={ () => <Login /> }/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst SocialApp = props => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default SocialApp","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialApp from './App';\n\n\nReactDOM.render(<SocialApp />, document.getElementById('root'));\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport preloader from '../../../assets/images/loader.svg';\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader} />;\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2_PTD\",\"error\":\"FormControls_error__2PZEi\",\"formSammuryError\":\"FormControls_formSammuryError__3kneh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2ItlU\",\"pageNumber\":\"Paginator_pageNumber__1fmQr\",\"selectedPage\":\"Paginator_selectedPage__1ck2W\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength}`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15u2-\",\"loginBlock\":\"Header_loginBlock__3f86R\"};","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(el => el.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = newPostText => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = profile => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = status => ({type: SET_STATUS, status})\r\nexport const deletePost = postId => ({type: DELETE_POST, postId})\r\n\r\nexport const getProfile = userId => {\r\n    return async dispatch => {\r\n        const response = await profileAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const getStatus = userId => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = status => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = newMessageBody => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}