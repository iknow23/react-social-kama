{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,2HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,qDCKtCe,EAAcC,YAAiB,IAwC/BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,CAXL,SAAAhB,GACnB,OACIG,EAAAC,EAAAC,cAAA,QAAMa,SAAUlB,EAAMmB,cAClBhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcF,KAAK,iBAAiBc,YAAY,wBAErGtB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0BASFqB,EA1CC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMjC,QAAQoC,IAAK,SAAAC,GAAC,OAAI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,IAAKF,EAAE7B,GAAIA,GAAI6B,EAAE7B,OACrFgC,EAAmBP,EAAM9B,SAASiC,IAAK,SAAAK,GAAC,OAAIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAASH,IAAKE,EAAEjC,GAAIJ,QAASqC,EAAErC,YAC1D6B,EAAMU,eAM3B,OAAKrC,EAAMsC,OAGPnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACZkC,GAEN1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAO6B,IAEX/B,EAAAC,EAAAC,cAACU,EAAD,CAAqBG,SAdT,SAAAqB,GAChBvC,EAAMwC,YAAYD,EAAOF,oBAGHlC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAU/B,GAAI,4DCnBtCgC,EAA6B,SAAAf,GAAK,MAAK,CACzCW,OAAQX,EAAMgB,KAAKL,gBCgBRM,sBACXC,YAfoB,SAAAlB,GACpB,MAAO,CACHC,YAAaD,EAAMC,cAIA,SAAAkB,GACvB,MAAO,CACHN,YAAa,SAAAH,GACTS,EAASC,YAAmBV,QDRR,SAAAW,GAAa,IACnCC,EADmC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAhB,IAAA,SAAA2B,MAAA,WAGjC,OAAKP,KAAKrD,MAAMsC,OACTnC,EAAAC,EAAAC,cAAC2C,EAAcK,KAAKrD,OADIG,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAU/B,GAAI,eAHZuC,EAAA,CACTY,IAAMb,WAQtC,OAFuCH,YAAQH,EAARG,CAAoCI,ICMhEL,CAGblB","file":"static/js/1.f84665fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3K6DX\",\"dialogsItems\":\"Dialogs_dialogsItems__l6oO0\",\"active\":\"Dialogs_active__2bldH\",\"messages\":\"Dialogs_messages__29RYF\",\"message\":\"Dialogs_message__3IIs4\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message key={m.id} message={m.message} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = values => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage: newMessageBody => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}