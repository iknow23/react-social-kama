{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","ProfileStatus","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","_ref","profile","className","s","src","photos","large","ProfileInfo_ProfileStatus","aboutMe","Preloader","Post","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","map","p","MyPosts_Post_Post","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","components_Profile_Profile","assign","Component","mapDispatchToProps","setUserProfile","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/2.7a78b74d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ywGXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1NgX4\",\"posts\":\"MyPosts_posts__iXfuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__SYR55\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevProps.status !== this.props.status) {\r\n    //         this.setState({\r\n    //             status: this.props.status\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                </div>\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatus status={status} updateStatus={updateStatus} />\r\n                <p>{profile.aboutMe}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\" validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n  form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addPost: newPostText => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {setUserProfile, getProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setUserProfile,\r\n    getProfile,\r\n    getStatus,\r\n    updateStatus\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}